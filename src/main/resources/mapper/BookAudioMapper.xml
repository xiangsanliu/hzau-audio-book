<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzau.feidian.hzauaudiobook.dao.mapper.BookAudioMapper">


    <insert id="insert">
        insert ignore into book_audio(name, bookId)
            VALUE (#{bookAudio.name}, #{bookAudio.bookId});
    </insert>

    <update id="incAmount">
        update book_audio
        set amount = amount + '1'
        where id = #{id};
    </update>

    <delete id="deleteOne">
        delete
        from book_audio
        where id = #{id}
    </delete>

    <delete id="deleteByBook">
        delete
        from book_audio
        where bookId = #{bookId}
    </delete>

    <select id="selectBookAudiosByBook" resultType="com.hzau.feidian.hzauaudiobook.dao.entity.BookAudio">
        select ba.id                as id,
               ba.name              as name,
               book.name            as bookName,
               count(tba.openid)    as thumb,
               ba.amount,
               ifnull((select 1
                       from thumb_book_audio t
                       where t.openid = #{openid}
                         and t.bookAudioId = ba.id
                       limit 1), 0) as thumbed,
               ifnull((select 1
                       from favourite_book_audio t
                       where t.openid = #{openid}
                         and t.bookAudioId = ba.id
                       limit 1), 0) as favourite
        from book_audio ba
                 left join book on book.id = ba.bookId
                 left join thumb_book_audio tba on ba.id = tba.bookAudioId
        where ba.bookId = #{bookId}
        group by ba.id;
    </select>

    <select id="selectOne" resultType="com.hzau.feidian.hzauaudiobook.dao.entity.BookAudio">
        select ba.id                as id,
               ba.name              as name,
               book.name            as bookName,
               count(tba.openid)    as thumb,
               ba.amount,
               ifnull((select 1
                       from thumb_book_audio t
                       where t.openid = #{openid}
                         and t.bookAudioId = ba.id
                       limit 1), 0) as thumbed,
               ifnull((select 1
                       from favourite_book_audio t
                       where t.openid = ''
                         and t.bookAudioId = ba.id
                       limit 1), 0) as favourite
        from book_audio ba
                 left join book on book.id = ba.bookId
                 left join thumb_book_audio tba on ba.id = tba.bookAudioId
        where ba.bookId = #{bookId}
        group by ba.id
        limit 1;
    </select>

</mapper>